// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241128095003_FirstCreation")]
    partial class FirstCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.HasIndex("FamilyId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Entities.CustomList", b =>
                {
                    b.Property<int>("CustomListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomListId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomListId");

                    b.HasIndex("FamilyId");

                    b.ToTable("CustomLists");
                });

            modelBuilder.Entity("Entities.CustomListItem", b =>
                {
                    b.Property<int>("CustomlistItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomlistItemId"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomListId")
                        .HasColumnType("int");

                    b.HasKey("CustomlistItemId");

                    b.HasIndex("CustomListId");

                    b.ToTable("CustomListItems");
                });

            modelBuilder.Entity("Entities.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FamilyId"));

                    b.HasKey("FamilyId");

                    b.ToTable("families");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("FamilyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Activity", b =>
                {
                    b.HasOne("Entities.Family", null)
                        .WithMany("Activities")
                        .HasForeignKey("FamilyId");
                });

            modelBuilder.Entity("Entities.CustomList", b =>
                {
                    b.HasOne("Entities.Family", null)
                        .WithMany("CustomLists")
                        .HasForeignKey("FamilyId");
                });

            modelBuilder.Entity("Entities.CustomListItem", b =>
                {
                    b.HasOne("Entities.CustomList", null)
                        .WithMany("Items")
                        .HasForeignKey("CustomListId");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.HasOne("Entities.Activity", null)
                        .WithMany("AssignedMembers")
                        .HasForeignKey("ActivityId");

                    b.HasOne("Entities.Family", null)
                        .WithMany("Members")
                        .HasForeignKey("FamilyId");
                });

            modelBuilder.Entity("Entities.Activity", b =>
                {
                    b.Navigation("AssignedMembers");
                });

            modelBuilder.Entity("Entities.CustomList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Entities.Family", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("CustomLists");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
